1  touch test.txt
    2  ls
    3  rm test.txt
    4  ls
    5  cd my-workspace
    6  ls
    7  cat deploymemnt.yaml
    8  cat cat deployment.yaml
    9  cat deployment.yaml
   10  cat deployment.yaml | grep "hello"
   11  echo "hello, world2" > deployment2.yaml
   12  ls
   13  echo "hello, korea" >> deployment2.yaml
   14  cat deployment2.yaml
   15  cp deployment.yaml deployment_backup.yaml
   16  ls -al
   17  rm deployment.yaml
   18  ls
   19  cd ..
   20  ls
   21  clear
   22  cd my-workspace/
   23  ls -al
   24  cd..
   25  cd ..
   26  ls -al
   27  cd my-workspace/
   28  history
   29  ls
   30  clear
   31  cd .
   32  cd ..
   33  rm -f my-workspace/
   34  sudo apt-get update
   35  sudo apt install apt-transport-https ca-certificates curl software-properties-common
   36  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add
   37  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
   38  sudo apt update
   39  sudo apt install docker-ce
   40  sudo usermod -aG docker skccadmin
   41  cd
   42  nano .bashrc
   43  cat .bashrc
   44  nano .bashrc
   45  cat .bashrc
   46  source ~/.bashrc
   47  dockerimages
   48  docker images
   49  docker container rm $(docker ps -a -q)
   50  docker image rm -f $(docker images -q)
   51  docker images
   52  pwd
   53  ls al
   54  ls -al
   55  cat .bashrc
   56  cat ~/.bashrc
   57  clear
   58  docker images
   59  docker ps -a -q
   60  docker ps -q
   61  clear
   62  docker run hello-world # 컨테이너 만들기
   63  docker images
   64  docker container rm $(docker ps -a -q)
   65  docker image rm -f $(docker images -q)
   66  docker images
   67  docker run --name my-nginx -d -p 80:80 nginx
   68  docker images
   69  docker ps
   70  docker run --name my-nginx2 -d -p 8080:80 nginx
   71  docker ps
   72  docker container stop my-nginx2
   73  docker container stop my-nginx
   74  docker container start my-nginx
   75  docker container stop my-nginx
   76  docker ocntainer rm my-nginx
   77  docker images
   78  docker ps -a
   79  mkdir Dockerfile
   80  ls -al
   81  cd DockerFile
   82  cd Dockerfile
   83  ls -al
   84  nano index.html
   85  nano Dockerfile
   86  ls -al
   87  docker build -t crazyhawk/my-nginx:v1 .
   88  docker images
   89  docker login
   90  docker push crazyhawk/my-nginx:v1
   91  docker images
   92  docker image rm nginx
   93  docker ps
   94  docker image rm crazyhawk/my-nginx:v1
   95  docker images
   96  docker image rm nginx
   97  docker ps -a
   98  docker run --name my-nginx -d -p 80:80 crazyhawk/my-nginx:v1
   99  docker container rm $(docker ps -a -q)
  100  docker image rm -f $(docker images -q)
  101  docker run --name new-nginx -d -p 80:80 Docker-ID/my-nginx:v1
  102  docker run --name my-nginx -d -p 80:80 crazyhawk/my-nginx:v1
  103  cd ..
  104  ls -al
  105  sudo apt-get update && sudo apt-get install -y apt-transport-https
  106  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  107  echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
  108  sudo apt-get update
  109  sudo apt-get install -y kubectl
  110  kubectl
  111  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  112  unzip awscliv2.zip
  113  sudo ./aws/install
  114  sudo apt-get install unzip
  115  unzip awscliv2.zip
  116  sudo ./aws/install
  117  curl --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
  118  sudo mv /tmp/eksctl /usr/local/bin
  119  aws
  120  kubectl
  121  eks
  122  aws configure
  123  aws configue
  124  eksctl create cluster --name admin10-Cluster --version 1.15 --nodegroup-name standard-workers --node-type t3.medium --nodes 2 --nodes-min 1 --nodes-max 3
  125  aws configure
  126  eksctl create cluster --name admin10-Cluster --version 1.15 --nodegroup-name standard-workers --node-type t3.medium --nodes 2 --nodes-min 1 --nodes-max 3
  127  kubectl get node
  128  kubectl get all
  129  kubectl config current-context
  130  clear
  131  watch kubectl get pod
  132  top
  133  watch node
  134  watch kubectl get node
  135  kubectl get pod
  136  watch kubectl get pod
  137  watch kubectl get all
  138  kubect get all
  139  kubectl get pod
  140  watch kubectl get all
  141  history
